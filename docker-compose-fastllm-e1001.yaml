name: docker
services:
  fastllm:
    command:
      - sh
      - -c
      - |
        celery -A task worker -l info > log/celery.log 2> log/celery.log &
        python3.11 main.py > log/flask.log 2> log/flask.log
    container_name: fastllm-server
      #     depends_on:
      #       elasticsearch:
      #         condition: service_healthy
      #         required: true
      #       mysql:
      #         condition: service_healthy
      #         required: true
    image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/fastllm:arm_1.2.20
    networks:
      fastllm:
        ipv4_address: 172.28.1.2
    ports:
      - mode: ingress
        target: 5000
        published: "25000"
        protocol: tcp
    restart: always
    stdin_open: true
    tty: true
      #   mysql:
      #     command:
      #       - --tls_version=TLSv1.2,TLSv1.3
      #       - --init-file
      #       - /data/application/init.sql
      #     container_name: fastllm-mysql
      #     environment:
      #       MYSQL_ROOT_PASSWORD: "123456"
      #     healthcheck:
      #       test:
      #         - CMD
      #         - mysqladmin
      #         - ping
      #         - -uroot
      #         - -p123456
      #       timeout: 10s
      #       interval: 10s
      #       retries: 3
      #     image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/mysql:8.0.29
      #     networks:
      #       fastllm:
      #         ipv4_address: 172.28.1.3
      #     ports:
      #       - mode: ingress
      #         target: 3306
      #         published: "23306"
      #         protocol: tcp
      #     restart: always
      #     volumes:
      #       - type: bind
      #         source: /home/ictrek/workspace-docker/chatbot/mysql-data
      #         target: /var/lib/mysql
      #       - type: bind
      #         source: /home/ictrek/workspace-docker/chatbot/init_mysql_database.sql
      #         target: /data/application/init.sql
      #         bind:
      #           create_host_path: true
            #  elasticsearch:
            #    container_name: fastllm-elasticsearch
            #    environment:
            #      ELASTIC_PASSWORD: "123456"
            #      ES_JAVA_OPTS: -Xms750m -Xmx750m
            #      cluster.routing.allocation.disk.threshold_enabled: "false"
            #      discovery.type: single-node
            #      xpack.security.enabled: "true"
            #      xpack.security.http.ssl.enabled: "false"
            #      xpack.security.transport.ssl.enabled: "false"
            #    healthcheck:
            #      test:
            #        - CMD-SHELL
            #        - curl http://elastic:123456@localhost:9200
            #      timeout: 10s
            #      interval: 10s
            #      retries: 120
            #    image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/elasticsearch:8.11.3
            #    networks:
            #      fastllm:
            #        ipv4_address: 172.28.1.4
            #    ports:
            #      - mode: ingress
            #        target: 9200
            #        published: "29200"
            #        protocol: tcp
            #    restart: always
            #    volumes:
            #      - type: bind
            #        source: /home/ictrek/workspace-docker/chatbot/es-data
            #        target: /usr/share/elasticsearch/data
            #      - type: bind
            #        source: /home/ictrek/workspace-docker/chatbot/es-log
            #        target: /usr/share/elasticsearch/logs
  minio:
    command:
      - server
      - /data
    container_name: fastllm-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    image: swr.cn-southwest-2.myhuaweicloud.com/ictrek-arm/minio:RELEASE.2021-04-22T15-44-28Z
    networks:
      fastllm:
        ipv4_address: 172.28.1.5
    ports:
      - mode: ingress
        target: 9000
        published: "29000"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /home/ictrek/workspace-docker/chatbot/minio-data
        target: /data
      - type: bind
        source: /home/ictrek/workspace-docker/chatbot/minio-config
        target: /root/.config
          #   redis:
          #     container_name: fastllm-redis
          #     environment:
          #       REDIS_ARGS: --requirepass 123456
          #     image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/redis-stack:7.2.0-v7
          #     networks:
          #       fastllm:
          #         ipv4_address: 172.28.1.6
          #     ports:
          #       - mode: ingress
          #         target: 6379
          #         published: "26379"
          #         protocol: tcp
          #       - mode: ingress
          #         target: 8001
          #         published: "28001"
          #         protocol: tcp
          #     restart: always
          #     volumes:
          #       - type: bind
          #         source: /home/ictrek/workspace-docker/chatbot/redis-data
          #         target: /data
          #   rabbitmq:
          #     container_name: fastllm-rabbitmq
          #     image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/rabbitmq:management
          #     networks:
          #       fastllm:
          #         ipv4_address: 172.28.1.7
          #     ports:
          #       - mode: ingress
          #         target: 5672
          #         published: "25672"
          #         protocol: tcp
          #       - mode: ingress
          #         target: 15672
          #         published: "35672"
          #         protocol: tcp
          #     restart: always
  whisper:
    command:
      - bash
      - /root/whisper_run.sh
    container_name: fastllm-whisper
    image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/whisper:arm_latest
    networks:
      fastllm:
        ipv4_address: 172.28.1.8
    ports:
      - mode: ingress
        target: 10095
        published: "30095"
        protocol: tcp
    restart: always
  ollama:
    container_name: fastllm-ollama
    image: swr.cn-southwest-2.myhuaweicloud.com/ictrek/ollama_server:arm_latest
    restart: always
    command: ["bash", "/root/ollama_run.sh"]
    stdin_open: true  # ~P~T| ~G~G~F~S~E
    tty: true         # ~P~T伪~H端
    environment:
      - MAX_MODEL_LEN=32768
    volumes:
      - type: bind
        source: /home/ictrek/workspace-docker/chatbot/ollama
        target: /root/.ollama
    ports:
      - "22299:11434"
    networks:
      fastllm:
        ipv4_address: 172.28.1.9
networks:
  fastllm:
    name: fastllm
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.1.0/24
